{"version":3,"sources":["My component/Header.js","My component/buttons.js","My component/Main.js","My component/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","invertCol","theme","className","to","title","searchbar","type","placeholder","onClick","setTheme","id","htmlFor","buttons","inputText","textInput","toUpperCase","setText","toLowerCase","Main","useState","text","style","themeHandler","value","onChange","e","target","rows","split","length","Footer","position","top","width","defaultProps","App","document","body","background","transition","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5c56bf8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = (props) => {\r\n\r\n  const switchThemeHandler=()=>{ props.theme==='light'? props.setTheme('dark'): props.setTheme('light') }\r\n  let invertCol= props.theme==='light'? 'dark': 'light'\r\n\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-${props.theme} bg-${props.theme}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link to='/' className=\"navbar-brand\">{props.title}</Link>\r\n          {props.searchbar ? (\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          ) : (\"\")}\r\n              <div className=\"form-check form-switch\">\r\n                <input onClick={switchThemeHandler} className=\"form-check-input\" type=\"checkbox\" id=\"switchTheme\"/>\r\n                <label className={`form-check-label text-${invertCol}`} htmlFor=\"switchTheme\">Toggle {props.theme==='light'? 'dark': 'light'} Mode</label>\r\n              </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  searchbar: PropTypes.bool,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"This is default Title\",\r\n  searchbar: false,\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function buttons(props) {\r\n  const upperCaseHandler = () => {\r\n    let inputText = props.textInput.toUpperCase();\r\n    props.setText(inputText);\r\n  };\r\n\r\n  const lowerCaseHandler = () => {\r\n    let inputText = props.textInput.toLowerCase();\r\n    props.setText(inputText);\r\n  };\r\n  \r\n  const clearTextHandler = () => {\r\n    props.setText('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={upperCaseHandler} className=\"btn btn-primary my-2\">\r\n        Convert To Uppercase\r\n      </button>\r\n      <button onClick={lowerCaseHandler} className=\"btn btn-danger my-2 mx-2\">\r\n        Convert To Lowercase\r\n      </button>\r\n      <button onClick={clearTextHandler} className=\"btn btn-secondary my-2\">\r\n        Clear\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React,{useState} from \"react\";\r\nimport Buttons from \"./buttons\";\r\n\r\nexport default function Main(props) {\r\n\r\n  const onValueChange=(e)=>{\r\n    setText(e.target.value);\r\n  }\r\n  const [text, setText]= useState('');\r\n\r\n  return (\r\n    <div style={props.themeHandler}>\r\n      <h1 className=\"text-center my-3\">Welcome to TEXT-TOOL!</h1>\r\n      <div className=\"container-sm mb-3\">\r\n        <textarea style={props.themeHandler} value={text} onChange={onValueChange} className=\"form-control\" id=\"textArea\" rows=\"3\"></textarea>\r\n        <Buttons textInput={text} setText={setText}/>\r\n        <div>{text.split(/\\w+/).length-1} words and {text.length} letters</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n\r\n    const style={\r\n        position: 'absolute',\r\n        top: '100vh',\r\n        width: '100%'\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"bg-dark text-light text-center py-1\" style={style}>Copyright &copy; TEXT-TOOL</div>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport {Header} from './My component/Header'\nimport Main from './My component/Main'\nimport Footer from './My component/Footer'\nimport {useState} from \"react\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [theme, setTheme]= useState('light');\n  let themeHandler={};\n  if (theme==='dark') {\n    document.body.style.background= \"#0e0e0e\";\n    document.body.style.transition= \"all 0.6s\";\n    themeHandler={\n      backgroundColor: '#0e0e0e',\n      color: 'white',\n      transition: 'all 0.6s'\n    }\n  }\n  else{\n    document.body.style.background= \"white\"\n    themeHandler={\n      backgroundColor: 'white',\n      color: 'black',\n      transition: 'all 0.6s'\n    }\n  }\n\n  return (\n    <Router>\n      <div style={themeHandler}>\n        <Header title=\"Text-Tool\" searchbar={false} theme={theme} setTheme={setTheme}/>\n        <Main themeHandler={themeHandler}/>\n        <Footer/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}